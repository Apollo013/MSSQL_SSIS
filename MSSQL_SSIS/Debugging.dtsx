<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/11/2017 10:10:58 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="APOLLO-HP"
  DTS:CreatorName="Apollo-HP\Apollo"
  DTS:DTSID="{2EB5011A-203F-464B-A855-923663FE7B7E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="6153"
  DTS:ObjectName="Debugging"
  DTS:PackageType="5"
  DTS:VersionBuild="11"
  DTS:VersionGUID="{CFC19012-F691-4C9A-9A1B-DA1009398DE6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{263CADD4-BE6C-4926-8BD1-E8286DBF81DB}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Apps\Published\MSSQL_SSIS\Exports\EmployeesExport.xls;Extended Properties=&quot;Excel 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF58968D-C9BC-46E4-B4BE-CE6746FB0913}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import Employees"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{DB2DD610-4407-48E0-A160-8249F1EA00D0}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Employees"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Employees\Import Employees"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Import Employees"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Employees</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Employees\Import Employees.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[EmployeeID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[EmployeeID]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[EmployeeID]"
                      name="EmployeeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[LastName]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[LastName]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[LastName]"
                      name="LastName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[FirstName]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[FirstName]"
                      name="FirstName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Title]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Title]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[TitleOfCourtesy]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[TitleOfCourtesy]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[TitleOfCourtesy]"
                      name="TitleOfCourtesy"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[BirthDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[BirthDate]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[BirthDate]"
                      name="BirthDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[HireDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[HireDate]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[HireDate]"
                      name="HireDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Address]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Address]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Address]"
                      name="Address"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[City]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[City]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Region]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Region]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Region]"
                      name="Region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[PostalCode]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[PostalCode]"
                      name="PostalCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Country]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Country]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[HomePhone]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[HomePhone]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[HomePhone]"
                      name="HomePhone"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Extension]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Extension]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Extension]"
                      name="Extension"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Notes]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Notes]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[Notes]"
                      name="Notes"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[ReportsTo]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[ReportsTo]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[ReportsTo]"
                      name="ReportsTo"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[PhotoPath]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[PhotoPath]"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].Columns[PhotoPath]"
                      name="PhotoPath"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[EmployeeID]"
                      dataType="r8"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[LastName]"
                      dataType="nText"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                      dataType="nText"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Title]"
                      dataType="nText"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[TitleOfCourtesy]"
                      dataType="nText"
                      name="TitleOfCourtesy" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[BirthDate]"
                      dataType="date"
                      name="BirthDate" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[HireDate]"
                      dataType="date"
                      name="HireDate" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Address]"
                      dataType="nText"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[City]"
                      dataType="nText"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Region]"
                      dataType="nText"
                      name="Region" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                      dataType="nText"
                      name="PostalCode" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Country]"
                      dataType="nText"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[HomePhone]"
                      dataType="nText"
                      name="HomePhone" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Extension]"
                      dataType="nText"
                      name="Extension" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[Notes]"
                      dataType="nText"
                      name="Notes" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[ReportsTo]"
                      dataType="r8"
                      name="ReportsTo" />
                    <externalMetadataColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Output].ExternalColumns[PhotoPath]"
                      dataType="nText"
                      name="PhotoPath" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[EmployeeID]"
                      dataType="r8"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[EmployeeID]"
                      name="EmployeeID" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[LastName]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[FirstName]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Title]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[TitleOfCourtesy]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[TitleOfCourtesy]"
                      name="TitleOfCourtesy" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[BirthDate]"
                      dataType="date"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[BirthDate]"
                      name="BirthDate" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[HireDate]"
                      dataType="date"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[HireDate]"
                      name="HireDate" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Address]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Address]"
                      name="Address" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[City]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Region]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Region]"
                      name="Region" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[PostalCode]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[PostalCode]"
                      name="PostalCode" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Country]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Country]"
                      name="Country" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[HomePhone]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[HomePhone]"
                      name="HomePhone" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Extension]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Extension]"
                      name="Extension" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Notes]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[Notes]"
                      name="Notes" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[ReportsTo]"
                      dataType="r8"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[ReportsTo]"
                      name="ReportsTo" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[PhotoPath]"
                      dataType="nText"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[PhotoPath]"
                      name="PhotoPath" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Employees\Import Employees.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Employees\Row Count"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::EmployeeRowCount</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import Employees\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Employees\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Import Employees\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Employees.Paths[Excel Source Output]"
              endId="Package\Import Employees\Row Count.Inputs[Row Count Input 1]"
              name="Excel Source Output"
              startId="Package\Import Employees\Import Employees.Outputs[Excel Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{95C71857-C8FD-4FA7-931D-214495437251}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7f34480affc14baa887c5e888aa26c94"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::EmployeeRowCount">
          <ProjectItem
            Name="ST_7f34480affc14baa887c5e888aa26c94.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a478a7ce-4beb-4d00-af1a-a60ffd800d83}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7f34480affc14baa887c5e888aa26c94</RootNamespace>
    <AssemblyName>ST_7f34480affc14baa887c5e888aa26c94</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f34480affc14baa887c5e888aa26c94.Properties.Settings.get_Default():ST_7f34480affc14baa887c5e888aa26c94.Properties.Sett" +
    "ings")]

namespace ST_7f34480affc14baa887c5e888aa26c94.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System.Windows.Forms;
#endregion

namespace ST_7f34480affc14baa887c5e888aa26c94
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            MessageBox.Show($"{Dts.Variables["EmployeeRowCount"].Value.ToString()} row(s) imported");
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_7f34480affc14baa887c5e888aa26c94</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_7f34480affc14baa887c5e888aa26c94</msb:DisplayName>
		<msb:ProjectId>{10BF32FC-116D-4183-A5CE-E5E303C2D08B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7f34480affc14baa887c5e888aa26c94.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7f34480affc14baa887c5e888aa26c94")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Hewlett-Packard Company")]
[assembly: AssemblyProduct("ST_7f34480affc14baa887c5e888aa26c94")]
[assembly: AssemblyCopyright("Copyright @ Hewlett-Packard Company 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f34480affc14baa887c5e888aa26c94.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f34480affc14baa887c5e888aa26c94.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f34480affc14baa887c5e888aa26c94.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7f34480affc14baa887c5e888aa26c94.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7f34480affc14baa887c5e888aa26c94.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7f34480affc14baa887c5e888aa26c94.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKfpnlgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAVi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQuAABPAAAAAEAAANQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAANQEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
LgAAAAAAAEgAAAACAAUA9CAAAFgMAAABAAAAAAAAAEwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPJyAQAAcAIoEAAACm8RAAAKcikAAHBvEgAACm8TAAAKbxQA
AAooFQAACigWAAAKJgIoEAAAChZvFwAACioeAigYAAAKKh4CKBkAAAoqrn4BAAAELR5ySwAAcNAD
AAACKBoAAApvGwAACnMcAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoHQAA
CioucwgAAAaAAwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA6AMAACN+
AABUBAAAlAUAACNTdHJpbmdzAAAAAOgJAADAAAAAI1VTAKgKAAAQAAAAI0dVSUQAAAC4CgAAoAEA
ACNCbG9iAAAAAAAAAAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAACAAAAAFAAAABgAAAAkAAAABAAAA
HQAAAAIAAAAQAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAAdQMBAAAAAAAGACUCRQQG
ALQCRQQGAHEBMgQPALkEAAAGAJ4B8wMGAAgC8wMGAOkB8wMGAJsC8wMGAEUC8wMGAF4C8wMGALUB
8wMGANAB4gIKAHkCJAMKAPAAJAMGAK0DpgMGAFQBMgQGAEgFpgMGABUEZQQGAAUE3gMOACQBXwMO
AIUBXwMOAAwByQMGADkBRQQKAE0DJAMSAPsEmwASAG4AmwAGAP4CpgMWAHwFDgUWAFsFDgUGALsA
pgMGAHcApgMGAIsF8wMAAAAAJQAAAAAAAQABAAEAEAC+AwEAOQABAAEAAAAQAGwEyARFAAEAAwAA
ARAABQXIBFkAAwAHAAMBAAAzBQAAPQAEAAoAEQCyA3AAEQDgAHQAEQBeAHgABgZNAHwAVoAjBX8A
VoDAAH8AUCAAAAAAhgDEAwYAAQCNIAAAAACGGCUEBgABAJUgAAAAAIMYJQQGAAEAnSAAAAAAkwgR
BIMAAQDJIAAAAACTCMgAiAABANAgAAAAAJMI1ACNAAEA2CAAAAAAlghPBZMAAgDfIAAAAACGGCUE
BgACAOcgAAAAAJEYKwSYAAIAAAABANwCCQAlBAEAEQAlBAYAGQAlBAoAKQAlBBAAMQAlBBAAOQAl
BBAAQQAlBBAASQAlBBAAUQAlBBAAWQAlBBAAYQAlBBAAaQAlBAYAgQAlBAYAqQAlBBUAuQAlBAYA
cQArBRsAwQD3BCAAyQCdAyUA0QDSAisAiQD8Ai8A2QBBBTMA4QB3BTkAwQBoBQEAcQAlBAYAiQAl
BAYA8QCJAD8A8QCHBUYAkQAlBEwAsQAlBAYACAAUAGYACAAYAGsAKQBzANMALgALAKsALgATALQA
LgAbANMALgAjANwALgArAAUBLgAzAAUBLgA7AAsBLgBDANwALgBLACgBLgBTAAUBLgBbAFYBQwBj
AGsASQBzANMAYQB7AGsAYwBrAGsAAwABAAQAAwAAABUEnAAAAOgAoQAAAFMFpgACAAQAAwACAAUA
BQABAAYABQACAAcABwAEgAAAAQAAAGsY00oAAAAAAAABAAAABAAAAAAAAAAAAAAAVABVAAAAAAAN
AAAAAAAAAAAAAABdAAUDAAAAAAQAAAAAAAAAAAAAAFQApgMAAAAADQAAAAAAAAAAAAAAXQAuAAAA
AAAEAAAAAAAAAAAAAABUAA4FAAAAAAAAAAABAAAAdgQAAAUAAgAAAABTVF83ZjM0NDgwYWZmYzE0
YmFhODg3YzVlODg4YWEyNmM5NAA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBU
eXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93
c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2Rl
QXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJh
bWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURl
c2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAFNUXzdmMzQ0ODBhZmZjMTRiYWE4ODdjNWU4ODhhYTI2Yzk0LmRsbABnZXRf
SXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdl
dF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfN2YzNDQ4MGFmZmMx
NGJhYTg4N2M1ZTg4OGFhMjZjOTQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNUXzdmMzQ0ODBhZmZjMTRiYWE4ODdjNWU4ODhhYTI2Yzk0LlByb3BlcnRpZXMA
Z2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBGb3JtYXQAT2JqZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABz
ZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAnewAwAH0AIAByAG8A
dwAoAHMAKQAgAGkAbQBwAG8AcgB0AGUAZAAAIUUAbQBwAGwAbwB5AGUAZQBSAG8AdwBDAG8AdQBu
AHQAAHFTAFQAXwA3AGYAMwA0ADQAOAAwAGEAZgBmAGMAMQA0AGIAYQBhADgAOAA3AGMANQBlADgA
OAA4AGEAYQAyADYAYwA5ADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAAAAADt00y4BhwpEl5HQZomkOXkABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEEIAASYQQg
ABJlBSABEmkcAyAAHAMgAA4FAAIODhwFAAERdQ4GAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk0
4IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0E
AAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBCAEAAgAAAAAAKAEAI1NUXzdmMzQ0ODBhZmZjMTRiYWE4ODdjNWU4ODhhYTI2Yzk0AAAF
AQAAAAAcAQAXSGV3bGV0dC1QYWNrYXJkIENvbXBhbnkAAC0BAChDb3B5cmlnaHQgQCBIZXdsZXR0
LVBhY2thcmQgQ29tcGFueSAyMDE3AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAsLgAA
AAAAAAAAAABGLgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOC4AAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAHYEAAAAAAAAAAAAAHYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDTSmsYAAABANNKaxg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsATWAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACyAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAUAAYAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABIAGUAdwBsAGUAdAB0AC0AUABhAGMAawBhAHIAZAAgAEMAbwBtAHAA
YQBuAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANwBm
ADMANAA0ADgAMABhAGYAZgBjADEANABiAGEAYQA4ADgANwBjADUAZQA4ADgAOABhAGEAMgA2AGMA
OQA0AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA1ADEALgAx
ADkAMQA1ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANwBmADMA
NAA0ADgAMABhAGYAZgBjADEANABiAGEAYQA4ADgANwBjADUAZQA4ADgAOABhAGEAMgA2AGMAOQA0
AC4AZABsAGwAAAB2ACkAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIABIAGUAdwBsAGUAdAB0AC0AUABhAGMAawBhAHIAZAAgAEMAbwBtAHAAYQBu
AHkAIAAyADAAMQA3AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA3AGYAMwA0
ADQAOAAwAGEAZgBmAGMAMQA0AGIAYQBhADgAOAA3AGMANQBlADgAOAA4AGEAYQAyADYAYwA5ADQA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8ANwBmADMANAA0
ADgAMABhAGYAZgBjADEANABiAGEAYQA4ADgANwBjADUAZQA4ADgAOABhAGEAMgA2AGMAOQA0AAAA
QgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADIANQAxAC4AMQA5
ADEANQA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADIANQAxAC4AMQA5ADEANQA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABYPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{5B72BFA1-B957-402D-9095-73EC42FD0585}"
      DTS:From="Package\Import Employees"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Script Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="167,42"
          Id="Package\Import Employees"
          TopLeft="400,132" />
        <NodeLayout
          Size="133,42"
          Id="Package\Script Task"
          TopLeft="411,219" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="480.5,174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import Employees">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="167,42"
          Id="Package\Import Employees\Import Employees"
          TopLeft="469.5,137.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\Import Employees\Row Count"
          TopLeft="488,238" />
        <EdgeLayout
          Id="Package\Import Employees.Paths[Excel Source Output]"
          TopLeft="553.5,179.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.5"
              Start="0,0"
              End="0,51">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Employees\Import Employees">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>